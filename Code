from faker import Faker
import random

# Khởi tạo Faker
fake = Faker()

# Danh sách các giá trị có thể cho các cột
gioi_tinh = ['Nam', 'Nữ']

# Các trường, khoa và chuyên ngành tương ứng
truong_khoa_chuyen_nganh = {
    'Kinh Tế': {
        'Khoa Học Quản Lý': ['Quản Trị Kinh Doanh', 'Marketing', 'Kế Toán'],
        'Kinh Tế': ['Kinh Tế Vĩ Mô', 'Kinh Tế Vi Mô']
    },
    'Khoa Học Tự Nhiên': {
        'Khoa Học Máy Tính': ['Kỹ Thuật Phần Mềm', 'Trí Tuệ Nhân Tạo'],
        'Toán Học': ['Toán Ứng Dụng', 'Toán Thuần Túy'],
        'Vật Lý': ['Vật Lý Lượng Tử', 'Vật Lý Thiên Văn']
    },
    'Nhân Văn': {
        'Lịch Sử': ['Lịch Sử Hiện Đại', 'Lịch Sử Cổ Đại'],
        'Triết Học': ['Đạo Đức Học', 'Siêu Hình Học']
    },
    'Kỹ Thuật': {
        'Kỹ Thuật Cơ Khí': ['Nhiệt Động Học', 'Robot Học'],
        'Kỹ Thuật Điện': ['Thiết Kế Mạch', 'Điện Vi Mạch'],
        'Kỹ Thuật Xây Dựng': ['Kỹ Thuật Kết Cấu', 'Kỹ Thuật Địa Chất']
    },
    'Luật': {
        'Luật': ['Luật Dân Sự', 'Luật Hình Sự']
    }
}

# Tạo dữ liệu cho bảng khoa
khoa = []
khoa_id_counter = 1
chuyen_nganh = []

for truong, dept_dict in truong_khoa_chuyen_nganh.items():
    for ten_khoa, chuyen_nganh_list in dept_dict.items():
        khoa_id = khoa_id_counter
        khoa.append((khoa_id, ten_khoa, truong))
        for chuyen_nganh_name in chuyen_nganh_list:
            chuyen_nganh.append((chuyen_nganh_name, khoa_id))
        khoa_id_counter += 1

# Tạo dữ liệu cho bảng giao_su và đảm bảo ít nhất một giáo sư cho mỗi khoa
giao_su = []
giao_su_id_counter = 1
so_luong_giao_su = 500  # Tạo 500 giáo sư

# Tạo ít nhất một giáo sư cho mỗi khoa
for khoa_item in khoa:
    ten = fake.name()
    ngay_sinh = fake.date_of_birth(minimum_age=30, maximum_age=65)
    gioi_tinh_value = random.choice(gioi_tinh)
    email = fake.unique.email()
    so_dien_thoai = fake.phone_number()
    giao_su.append((giao_su_id_counter, ten, ngay_sinh, gioi_tinh_value, email, so_dien_thoai, khoa_item[0]))
    giao_su_id_counter += 1

# Tạo thêm các giáo sư ngẫu nhiên
so_luong_giao_su_them = so_luong_giao_su - len(khoa)
for _ in range(so_luong_giao_su_them):
    ten = fake.name()
    ngay_sinh = fake.date_of_birth(minimum_age=30, maximum_age=65)
    gioi_tinh_value = random.choice(gioi_tinh)
    email = fake.unique.email()
    so_dien_thoai = fake.phone_number()
    khoa_id = random.choice(khoa)[0]
    giao_su.append((giao_su_id_counter, ten, ngay_sinh, gioi_tinh_value, email, so_dien_thoai, khoa_id))
    giao_su_id_counter += 1

# Tạo dữ liệu cho bảng khoa_hoc
khoa_hoc = []
khoa_hoc_id_counter = 1
so_luong_khoa_hoc = 1000  # Tạo 1000 khóa học

for khoa_item in khoa:
    for _ in range(so_luong_khoa_hoc // len(khoa)):
        ten_khoa_hoc = fake.catch_phrase()
        khoa_id = khoa_item[0]
        khoa_hoc.append((khoa_hoc_id_counter, ten_khoa_hoc, khoa_id))
        khoa_hoc_id_counter += 1

# Tạo dữ liệu cho bảng phong_hoc
phong_hoc = []
so_luong_phong_hoc = 200  # Tạo 200 phòng học

for i in range(1, so_luong_phong_hoc + 1):
    so_phong = f'P{random.randint(100, 999)}'
    toa_nha = fake.company()
    suc_chua = random.randint(30, 100)
    phong_hoc.append((i, so_phong, toa_nha, suc_chua))

# Tạo dữ liệu cho bảng lich_hoc với giới hạn 10,000 bản ghi
lich_hoc = []
lich_hoc_id_counter = 1
so_luong_lich_hoc = 10000

for _ in range(so_luong_lich_hoc):
    khoa_hoc_item = random.choice(khoa_hoc)
    giao_su_id = random.choice(giao_su)[0]
    phong_hoc_id = random.choice(phong_hoc)[0]
    thu_trong_tuan = fake.day_of_week()
    gio_bat_dau = fake.time(pattern="%H:%M:%S", end_datetime=None)
    gio_ket_thuc = fake.time(pattern="%H:%M:%S", end_datetime=None)
    lich_hoc.append((lich_hoc_id_counter, khoa_hoc_item[0], giao_su_id, phong_hoc_id, thu_trong_tuan, gio_bat_dau, gio_ket_thuc))
    lich_hoc_id_counter += 1

# Tạo dữ liệu cho bảng sinh_vien và đảm bảo ít nhất một sinh viên cho mỗi chuyên ngành
sinh_vien = []
sinh_vien_id_counter = 1
so_luong_sinh_vien = 10000  # Tạo 10,000 sinh viên

# Tạo ít nhất một sinh viên cho mỗi chuyên ngành
for chuyen_nganh_name, khoa_id in chuyen_nganh:
    ten = fake.name()
    ngay_sinh = fake.date_of_birth(minimum_age=18, maximum_age=25)
    gioi_tinh_value = random.choice(gioi_tinh)
    dia_chi = fake.address().replace("\n", ", ")
    email = fake.unique.email()
    so_dien_thoai = fake.phone_number()
    nam_nhap_hoc = random.randint(2018, 2023)
    sinh_vien.append((sinh_vien_id_counter, ten, ngay_sinh, gioi_tinh_value, dia_chi, email, so_dien_thoai, khoa_id, chuyen_nganh_name, nam_nhap_hoc))
    sinh_vien_id_counter += 1

# Tạo thêm các sinh viên ngẫu nhiên
so_luong_sinh_vien_them = so_luong_sinh_vien - len(chuyen_nganh)
for _ in range(so_luong_sinh_vien_them):
    ten = fake.name()
    ngay_sinh = fake.date_of_birth(minimum_age=18, maximum_age=25)
    gioi_tinh_value = random.choice(gioi_tinh)
    dia_chi = fake.address().replace("\n", ", ")
    email = fake.unique.email()
    so_dien_thoai = fake.phone_number()
    chuyen_nganh_name, khoa_id = random.choice(chuyen_nganh)
    nam_nhap_hoc = random.randint(2018, 2023)
    sinh_vien.append((sinh_vien_id_counter, ten, ngay_sinh, gioi_tinh_value, dia_chi, email, so_dien_thoai, khoa_id, chuyen_nganh_name, nam_nhap_hoc))
    sinh_vien_id_counter += 1

# Tạo dữ liệu cho bảng dang_ky_hoc
dang_ky_hoc = []
dang_ky_hoc_id_counter = 1

for sinh_vien_item in sinh_vien:
    khoa_hoc_da_dang_ky = random.sample(khoa_hoc, random.randint(3, 5))
    for khoa_hoc_item in khoa_hoc_da_dang_ky:
        ngay_dang_ky = fake.date_this_decade()
        lich_khoa_hoc = [sch for sch in lich_hoc if sch[1] == khoa_hoc_item[0]]
        if not lich_khoa_hoc:
            continue  # Bỏ qua nếu không có lịch học cho khóa học này
        lich_hoc_id = random.choice(lich_khoa_hoc)[0]
        dang_ky_hoc.append((dang_ky_hoc_id_counter, sinh_vien_item[0], khoa_hoc_item[0], ngay_dang_ky, lich_hoc_id))
        dang_ky_hoc_id_counter += 1

# Đảm bảo mỗi sinh viên có ít nhất một lần ghi danh
sinh_vien_da_dang_ky = {dkh[1] for dkh in dang_ky_hoc}
sinh_vien_chua_dang_ky = [sv for sv in sinh_vien if sv[0] not in sinh_vien_da_dang_ky]

for sinh_vien_item in sinh_vien_chua_dang_ky:
    khoa_hoc_item = random.choice(khoa_hoc)
    ngay_dang_ky = fake.date_this_decade()
    lich_khoa_hoc = [sch for sch in lich_hoc if sch[1] == khoa_hoc_item[0]]
    if not lich_khoa_hoc:
        continue  # Bỏ qua nếu không có lịch học cho khóa học này
    lich_hoc_id = random.choice(lich_khoa_hoc)[0]
    dang_ky_hoc.append((dang_ky_hoc_id_counter, sinh_vien_item[0], khoa_hoc_item[0], ngay_dang_ky, lich_hoc_id))
    dang_ky_hoc_id_counter += 1

# Tạo dữ liệu cho bảng diem
diem = []
danh_sach_diem = [
    ('A+', 4.0), ('A', 4.0), ('A-', 3.7),
    ('B+', 3.3), ('B', 3.0), ('B-', 2.7),
    ('C+', 2.3), ('C', 2.0), ('C-', 1.7),
    ('D+', 1.3), ('D', 1.0), ('F', 0.0)
]

for dang_ky_hoc_item in dang_ky_hoc:
    diem_chu, diem_so = random.choice(danh_sach_diem)
    sinh_vien_id = dang_ky_hoc_item[1]
    diem.append((len(diem) + 1, sinh_vien_id, dang_ky_hoc_item[0], diem_chu, diem_so))

# Đảm bảo mỗi sinh viên có ít nhất một bảng điểm
sinh_vien_co_diem = {diem_item[1] for diem_item in diem}
sinh_vien_khong_co_diem = [sv for sv in sinh_vien if sv[0] not in sinh_vien_co_diem]

for sinh_vien_item in sinh_vien_khong_co_diem:
    dang_ky_hoc_item = random.choice([dkh for dkh in dang_ky_hoc if dkh[1] == sinh_vien_item[0]])
    diem_chu, diem_so = random.choice(danh_sach_diem)
    diem.append((len(diem) + 1, sinh_vien_item[0], dang_ky_hoc_item[0], diem_chu, diem_so))

# Lưu các câu lệnh SQL vào tệp
with open('insert_data_large.sql', 'w') as f:
    f.write("USE QUANLYSINHVIEN;\n\n")

    f.write("INSERT INTO khoa (khoa_id, ten_khoa, truc_thuoc) VALUES\n")
    f.write(",\n".join([f"({d[0]}, '{d[1]}', '{d[2]}')" for d in khoa]) + ";\n\n")

    f.write("INSERT INTO giao_su (giao_su_id, ten, ngay_sinh, gioi_tinh, email, so_dien_thoai, khoa_id) VALUES\n")
    f.write(",\n".join([f"({p[0]}, '{p[1]}', '{p[2]}', '{p[3]}', '{p[4]}', '{p[5]}', {p[6]})" for p in giao_su]) + ";\n\n")

    f.write("INSERT INTO khoa_hoc (khoa_hoc_id, ten_khoa_hoc, khoa_id) VALUES\n")
    f.write(",\n".join([f"({c[0]}, '{c[1]}', {c[2]})" for c in khoa_hoc]) + ";\n\n")

    f.write("INSERT INTO phong_hoc (phong_hoc_id, so_phong, toa_nha, suc_chua) VALUES\n")
    f.write(",\n".join([f"({cr[0]}, '{cr[1]}', '{cr[2]}', {cr[3]})" for cr in phong_hoc]) + ";\n\n")

    f.write("INSERT INTO lich_hoc (lich_hoc_id, khoa_hoc_id, giao_su_id, phong_hoc_id, thu_trong_tuan, gio_bat_dau, gio_ket_thuc) VALUES\n")
    f.write(",\n".join([f"({sc[0]}, {sc[1]}, {sc[2]}, {sc[3]}, '{sc[4]}', '{sc[5]}', '{sc[6]}')" for sc in lich_hoc]) + ";\n\n")

    f.write("INSERT INTO sinh_vien (sinh_vien_id, ten, ngay_sinh, gioi_tinh, dia_chi, email, so_dien_thoai, khoa_id, chuyen_nganh, nam_nhap_hoc) VALUES\n")
    f.write(",\n".join([f"({s[0]}, '{s[1]}', '{s[2]}', '{s[3]}', '{s[4]}', '{s[5]}', '{s[6]}', {s[7]}, '{s[8]}', {s[9]})" for s in sinh_vien]) + ";\n\n")

    f.write("INSERT INTO dang_ky_hoc (dang_ky_hoc_id, sinh_vien_id, khoa_hoc_id, ngay_dang_ky, lich_hoc_id) VALUES\n")
    f.write(",\n".join([f"({e[0]}, {e[1]}, {e[2]}, '{e[3]}', {e[4]})" for e in dang_ky_hoc]) + ";\n\n")

    f.write("INSERT INTO diem (diem_id, sinh_vien_id, dang_ky_hoc_id, diem_chu, diem_so) VALUES\n")
    f.write(",\n".join([f"({g[0]}, {g[1]}, {g[2]}, '{g[3]}', {g[4]})" for g in diem]) + ";\n\n")
